case prepareNextCycleForFifthSample:
                if (drive.isBusy()) return;

                IntakeStates.setMotorState(IntakeMotorStates.idle);
                IntakeStates.setExtendoState(ExtendoStates.retracting);

                // Move arm back to default position
                OuttakeStates.setArmState(ArmStates.down);

                // Fully open the claw before retracting slides
                OuttakeStates.setSampleClawState(SampleClawStates.fullyOpen);

                // Retract slides after the arm is fully reset
                OuttakeStates.setSampleReleaseButtonState(SampleReleaseButtonStates.retractSlides);

                // Set wait time to ensure slides fully retract
                if (currentWait == 0) {
                    addWaitTime(AutonomousConstants.slideRetractWait);
                }

                // Prevent state transition until slides are fully down
                if (currentWait > getSeconds()) return;


                // Move to the next state after retraction is complete
                sampleAutonState = SampleAutonState.fifthSampleIntakePath;
                currentWait = 0; // Reset wait time for next use
                break;

            case fifthSampleIntakePath:
//                if (drive.isBusy()) return;


                drive.followTrajectorySequenceAsync(trajectories.followFiveSampleIntakePath());
                sampleAutonState = SampleAutonState.startIntakeForFifthSample;
                break;

            case startIntakeForFifthSample:
                if (drive.isBusy()) return;
                // Extend intake slides
                IntakeStates.setExtendoState(ExtendoStates.fullyExtend);

                // Start intake motor
                IntakeStates.setMotorState(IntakeMotorStates.forward);

                // Move to the next state or stop

                currentWait = getSeconds() + 1.0;
                sampleAutonState = SampleAutonState.waiting;
                break;

            case waiting:
                // Check if 1 second has passed
                if (getSeconds() < currentWait) return; // Stay in this state until time has passed

                // Once 1 second has passed, proceed to the next state
                sampleAutonState = SampleAutonState.fifthSampleOuttakePath;
                break;

            case fifthSampleOuttakePath:
                // Stop the intake motor
                IntakeStates.setMotorState(IntakeMotorStates.idle);

                // Retract the intake slides
                IntakeStates.setExtendoState(ExtendoStates.retracting);

                drive.followTrajectorySequenceAsync(trajectories.followFiveSampleOuttakePath());

                OuttakeStates.extendOuttakeAndFlipArm();

                sampleAutonState = SampleAutonState.waitForFlipFifthSample;
                break;

            case waitForFlipFifthSample:
                // Ensure the arm has fully flipped before proceeding
                if (!OuttakeStates.isArmFlipped()) return;

                // Wait 1 second before releasing the second sample
                sampleAutonState = SampleAutonState.releaseFifthSample;
                break;

            case releaseFifthSample:
                if(drive.isBusy()) return;

                // Release the sample
                OuttakeStates.releaseSample();

                // Wait 0.2 seconds before stopping
                addWaitTime(0.2);
                sampleAutonState = SampleAutonState.prepareNextCycleForSubSample;
                break;

            case prepareNextCycleForSubSample:
                if (drive.isBusy()) return;

                // Move arm back to default position
                OuttakeStates.setArmState(ArmStates.down);

                // Fully open the claw before retracting slides
                OuttakeStates.setSampleClawState(SampleClawStates.fullyOpen);

                // Retract slides after the arm is fully reset
                OuttakeStates.setSampleReleaseButtonState(SampleReleaseButtonStates.retractSlides);

                // Set wait time to ensure slides fully retract
                if (currentWait == 0) {
                    addWaitTime(AutonomousConstants.slideRetractWait);
                }

                // Prevent state transition until slides are fully down
                if (currentWait > getSeconds()) return;


                // Move to the next state after retraction is complete
                sampleAutonState = SampleAutonState.fifthSampleIntakePath;
                currentWait = 0; // Reset wait time for next use
                break;